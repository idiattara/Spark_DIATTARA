Pourquoi Ã§a arrive ?

Quand tu crÃ©es un topic, Kafka choisit les rÃ©plicas de maniÃ¨re sÃ©quentielle selon partition.assignment.strategy.

Si la distribution initiale nâ€™Ã©tait pas bien Ã©quilibrÃ©e, beaucoup de partitions ont le mÃªme broker en premier dans leur liste â†’ donc le mÃªme preferred replica.

ğŸ”¹ Bonnes pratiques pour Ã©viter Ã§a

Utiliser un rebalancer

Confluent propose le Confluent Balancer :

confluent-rebalancer execute --bootstrap-server broker1:9092 --throttle 100000000


Il redistribue les leaders et les rÃ©plicas pour Ã©viter la concentration.

ContrÃ´ler la crÃ©ation des topics

Utiliser un bon num.partitions et replication.factor.

VÃ©rifier la rÃ©partition des preferred replicas dÃ¨s la crÃ©ation.

Surveiller les mÃ©triques de leadership

MÃ©trique LeaderCount par broker.

Si un broker est beaucoup plus chargÃ© en leaders â†’ dÃ©clencher un rebalance.

ğŸ”¹ Ce quâ€™il faut retenir

La commande kafka-preferred-replica-election ne redistribue pas intelligemment : elle ne fait que ramener le leader sur le rÃ©plica prÃ©fÃ©rÃ©.

Si ta config de topics a beaucoup de rÃ©plicas prÃ©fÃ©rÃ©s sur un mÃªme broker, tu risques un dÃ©sÃ©quilibre.

Pour Ã©quilibrer intelligemment, il faut un outil de rebalancing (Confluent Balancer ou kafka-reassign-partitions).
